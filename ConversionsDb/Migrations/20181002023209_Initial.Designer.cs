// <auto-generated />
using ConversionsDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConversionsDb.Migrations
{
    [DbContext(typeof(ConversionsContext))]
    [Migration("20181002023209_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConversionsDb.Models.Conversions.BaseUnitMap", b =>
                {
                    b.Property<int>("UnitTypeId");

                    b.Property<string>("BaseUnitSymbol")
                        .HasMaxLength(8);

                    b.HasKey("UnitTypeId");

                    b.HasIndex("BaseUnitSymbol");

                    b.ToTable("BaseUnitMap","Conversions");
                });

            modelBuilder.Entity("ConversionsDb.Models.Conversions.Conversion", b =>
                {
                    b.Property<string>("FromUnitSymbol")
                        .HasMaxLength(8);

                    b.Property<string>("ToUnitSymbol")
                        .HasMaxLength(8);

                    b.Property<double>("Multiplier");

                    b.HasKey("FromUnitSymbol", "ToUnitSymbol");

                    b.HasIndex("ToUnitSymbol");

                    b.ToTable("Conversion","Conversions");
                });

            modelBuilder.Entity("ConversionsDb.Models.Conversions.Unit", b =>
                {
                    b.Property<string>("Symbol")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Symbol");

                    b.ToTable("Unit","Conversions");
                });

            modelBuilder.Entity("ConversionsDb.Models.Conversions.UnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("UnitType","Conversions");
                });

            modelBuilder.Entity("ConversionsDb.Models.Conversions.UnitTypeMap", b =>
                {
                    b.Property<int>("UnitTypeId");

                    b.Property<string>("UnitSymbol")
                        .HasMaxLength(8);

                    b.HasKey("UnitTypeId", "UnitSymbol");

                    b.HasAlternateKey("UnitSymbol", "UnitTypeId");

                    b.ToTable("UnitTypeMap","Conversions");
                });

            modelBuilder.Entity("ConversionsDb.Models.Conversions.BaseUnitMap", b =>
                {
                    b.HasOne("ConversionsDb.Models.Conversions.Unit", "BaseUnit")
                        .WithMany()
                        .HasForeignKey("BaseUnitSymbol");

                    b.HasOne("ConversionsDb.Models.Conversions.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConversionsDb.Models.Conversions.Conversion", b =>
                {
                    b.HasOne("ConversionsDb.Models.Conversions.Unit", "FromUnit")
                        .WithMany()
                        .HasForeignKey("FromUnitSymbol")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConversionsDb.Models.Conversions.Unit", "ToUnit")
                        .WithMany()
                        .HasForeignKey("ToUnitSymbol")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConversionsDb.Models.Conversions.UnitTypeMap", b =>
                {
                    b.HasOne("ConversionsDb.Models.Conversions.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitSymbol")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConversionsDb.Models.Conversions.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
