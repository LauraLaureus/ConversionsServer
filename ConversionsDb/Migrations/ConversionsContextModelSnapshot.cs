// <auto-generated />
using ConversionsDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConversionsDb.Migrations
{
    [DbContext(typeof(ConversionsContext))]
    partial class ConversionsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConversionsDb.Models.Units.BaseUnitMap", b =>
                {
                    b.Property<int>("UnitTypeId");

                    b.Property<int>("UnitId");

                    b.HasKey("UnitTypeId", "UnitId");

                    b.HasAlternateKey("UnitId", "UnitTypeId");

                    b.ToTable("BaseUnitMap","Units");
                });

            modelBuilder.Entity("ConversionsDb.Models.Units.RelativeValue", b =>
                {
                    b.Property<int>("BaseUnitId");

                    b.Property<int>("UnitId");

                    b.Property<double>("Value");

                    b.HasKey("BaseUnitId", "UnitId");

                    b.HasIndex("UnitId");

                    b.ToTable("RelativeValue","Units");
                });

            modelBuilder.Entity("ConversionsDb.Models.Units.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.ToTable("Unit","Units");
                });

            modelBuilder.Entity("ConversionsDb.Models.Units.UnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("UnitType","Units");
                });

            modelBuilder.Entity("ConversionsDb.Models.Units.UnitTypeMap", b =>
                {
                    b.Property<int>("UnitTypeId");

                    b.Property<int>("UnitId");

                    b.HasKey("UnitTypeId", "UnitId");

                    b.HasAlternateKey("UnitId", "UnitTypeId");

                    b.ToTable("UnitTypeMap","Units");
                });

            modelBuilder.Entity("ConversionsDb.Models.Units.BaseUnitMap", b =>
                {
                    b.HasOne("ConversionsDb.Models.Units.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConversionsDb.Models.Units.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConversionsDb.Models.Units.RelativeValue", b =>
                {
                    b.HasOne("ConversionsDb.Models.Units.Unit", "BaseUnit")
                        .WithMany()
                        .HasForeignKey("BaseUnitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConversionsDb.Models.Units.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConversionsDb.Models.Units.UnitTypeMap", b =>
                {
                    b.HasOne("ConversionsDb.Models.Units.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConversionsDb.Models.Units.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
